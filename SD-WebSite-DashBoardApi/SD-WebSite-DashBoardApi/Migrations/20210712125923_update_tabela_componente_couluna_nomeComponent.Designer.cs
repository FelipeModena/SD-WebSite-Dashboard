// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SD_WebSite_DashBoardApi.Models.Context;

namespace SD_WebSite_DashBoardApi.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20210712125923_update_tabela_componente_couluna_nomeComponent")]
    partial class update_tabela_componente_couluna_nomeComponent
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("SD_WebSite_DashBoardApi.Models.Administrador", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("ComponenteId")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<string>("Usuario")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario");

                    b.HasKey("Id");

                    b.HasIndex("ComponenteId");

                    b.ToTable("adminstrador");
                });

            modelBuilder.Entity("SD_WebSite_DashBoardApi.Models.Componente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("CorBotao1")
                        .HasColumnType("longtext")
                        .HasColumnName("cor_botao_1");

                    b.Property<string>("CorSubTitulo")
                        .HasColumnType("longtext")
                        .HasColumnName("cor_sub_titulo");

                    b.Property<string>("CorTitulo")
                        .HasColumnType("longtext")
                        .HasColumnName("cor_titulo");

                    b.Property<long>("PaginaId")
                        .HasColumnType("bigint")
                        .HasColumnName("pagina_id");

                    b.Property<string>("SubTitulo")
                        .HasColumnType("longtext")
                        .HasColumnName("sub_titulo");

                    b.Property<string>("Texto")
                        .HasColumnType("longtext")
                        .HasColumnName("texto");

                    b.Property<string>("TipoComponente")
                        .HasColumnType("longtext")
                        .HasColumnName("tipo_componente");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext")
                        .HasColumnName("titulo");

                    b.Property<string>("TxtBotao1")
                        .HasColumnType("longtext")
                        .HasColumnName("txt_botao_1");

                    b.Property<string>("UrlBotao1")
                        .HasColumnType("longtext")
                        .HasColumnName("url_botao_1");

                    b.Property<string>("UrlDirecionamentoPaginas")
                        .HasColumnType("longtext")
                        .HasColumnName("url_direcionamento_paginas");

                    b.Property<string>("UrlImagem")
                        .HasColumnType("longtext")
                        .HasColumnName("url_imagem");

                    b.HasKey("Id");

                    b.HasIndex("PaginaId");

                    b.ToTable("componente");
                });

            modelBuilder.Entity("SD_WebSite_DashBoardApi.Models.Pagina", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("NomePagina")
                        .HasColumnType("longtext")
                        .HasColumnName("nome_pagina");

                    b.Property<int>("Ordem")
                        .HasColumnType("int")
                        .HasColumnName("ordem");

                    b.HasKey("Id");

                    b.ToTable("pagina");
                });

            modelBuilder.Entity("SD_WebSite_DashBoardApi.Models.Administrador", b =>
                {
                    b.HasOne("SD_WebSite_DashBoardApi.Models.Componente", null)
                        .WithMany("AdministradorId")
                        .HasForeignKey("ComponenteId");
                });

            modelBuilder.Entity("SD_WebSite_DashBoardApi.Models.Componente", b =>
                {
                    b.HasOne("SD_WebSite_DashBoardApi.Models.Pagina", "Pagina")
                        .WithMany("Componente")
                        .HasForeignKey("PaginaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pagina");
                });

            modelBuilder.Entity("SD_WebSite_DashBoardApi.Models.Componente", b =>
                {
                    b.Navigation("AdministradorId");
                });

            modelBuilder.Entity("SD_WebSite_DashBoardApi.Models.Pagina", b =>
                {
                    b.Navigation("Componente");
                });
#pragma warning restore 612, 618
        }
    }
}
